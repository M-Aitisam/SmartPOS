// <auto-generated />
using ClassLibraryDAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ClassLibraryDAL.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.3");

            modelBuilder.Entity("ClassLibraryEntities.BusinessCategory", b =>
                {
                    b.Property<int>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("CategoryID");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("ClassLibraryEntities.BusinessSubItem", b =>
                {
                    b.Property<int>("SubItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoryID")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ParentSubItemID")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<string>("SubItemName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("SubItemID");

                    b.HasIndex("CategoryID");

                    b.HasIndex("ParentSubItemID");

                    b.ToTable("SubCategories");
                });

            modelBuilder.Entity("ClassLibraryEntities.BusinessSubItem", b =>
                {
                    b.HasOne("ClassLibraryEntities.BusinessCategory", "Category")
                        .WithMany("SubItems")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClassLibraryEntities.BusinessSubItem", "ParentSubItem")
                        .WithMany("NestedSubItems")
                        .HasForeignKey("ParentSubItemID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Category");

                    b.Navigation("ParentSubItem");
                });

            modelBuilder.Entity("ClassLibraryEntities.BusinessCategory", b =>
                {
                    b.Navigation("SubItems");
                });

            modelBuilder.Entity("ClassLibraryEntities.BusinessSubItem", b =>
                {
                    b.Navigation("NestedSubItems");
                });
#pragma warning restore 612, 618
        }
    }
}
