@page "/"
@layout MainLayout
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime
@inject StateContainerService StateContainer
@rendermode InteractiveServer

<div class="dashboard-container">
    <!-- Animated Background Elements -->
    <div class="bg-elements">
        <div class="circle circle-1"></div>
        <div class="circle circle-2"></div>
        <div class="circle circle-3"></div>
    </div>

    <div class="dashboard-content">
        <div class="dashboard-header">
            <div class="welcome-message">
                <h2>Welcome to</h2>
                <h1>Menu<span>IQ</span></h1>
                <p class="subtitle">From chaos to clarity – control orders, tables, and inventory</p>
            </div>
            <div class="quick-stats">
                <div class="stat-card">
                    <i class="fas fa-utensils"></i>
                    <div>
                        <span class="stat-value">0</span>
                        <span class="stat-label">Active Orders</span>
                    </div>
                </div>
                <div class="stat-card">
                    <i class="fas fa-users"></i>
                    <div>
                        <span class="stat-value">1</span>
                        <span class="stat-label">Staff Online</span>
                    </div>
                </div>
            </div>
        </div>

        <div class="dashboard-grid">
            @foreach (var item in DashboardItems)
            {
                bool isLocked = (item.Route != "login" && item.Route != "businessdetails") &&
                (!IsAuthenticated || !IsRegistered);

                <div class="dashboard-card @(isLocked ? "locked-card" : "")"
                     @onclick="() => HandleCardClick(item.Route)">

                    @if (isLocked)
                    {
                        <div class="card-lock">
                            <i class="fas fa-lock"></i>
                        </div>
                    }

                    <div class="card-icon">
                        <i class="@item.Icon"></i>
                    </div>
                    <div class="card-content">
                        <h3>@item.Label</h3>
                        <p>@GetCardDescription(item.Label)</p>
                    </div>
                    <div class="card-hover">
                        <i class="fas fa-arrow-right"></i>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@code {
    private bool IsAuthenticated => StateContainer.CurrentBusiness != null;
    private bool IsRegistered => StateContainer.IsRegistered;
    private List<DashboardItem> DashboardItems = new()
    {
        new DashboardItem("Business Register", "fas fa-store", "businessdetails"),
        new DashboardItem("Login", "fas fa-sign-in-alt", "login"),
        new DashboardItem("Categories", "fas fa-tags", "categories"),
        new DashboardItem("Products", "fas fa-box-open", "product"),
        new DashboardItem("Menu", "fas fa-utensils", "menu"),
        new DashboardItem("Admin", "fas fa-user-cog", "adminpage"),
        new DashboardItem("Order History", "fas fa-history", "order-history"),
        new DashboardItem("Sales Report", "fas fa-chart-line", "salesreport")
    };

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        StateContainer.OnChange += StateHasChanged;
    }

    private string GetCardDescription(string label)
    {
        return label switch
        {
            "Business Register" => "Set up your business profile to begin",
            "Login" => "Access your account",
            "Categories" => "Manage product categories",
            "Products" => "View and edit products",
            "Menu" => "Create and update menu items",
            "Admin" => "Administrator tools",
            "Order History" => "View past orders",
            "Sales Report" => "Analyze sales data",
            _ => "Manage your restaurant operations"
        };
    }

    private void HandleCardClick(string route)
    {
        if (!IsAuthenticated && route != "login")
        {
            // Show message or prevent navigation
            return;
        }

        if (!IsRegistered && route != "businessdetails" && route != "login")
        {
            // Show message to complete registration first
            return;
        }

        NavigationManager.NavigateTo($"/{route}");
    }

    private class DashboardItem
    {
        public string Label { get; }
        public string Icon { get; }
        public string Route { get; }

        public DashboardItem(string label, string icon, string route)
        {
            Label = label;
            Icon = icon;
            Route = route;
        }
    }
    public void Dispose()
    {
        StateContainer.OnChange -= StateHasChanged; // Add this line
    }

}

<style>
    /* Base Styles */
    :root {
        --primary: #6c5ce7;
        --primary-light: #a29bfe;
        --secondary: #00cec9;
        --dark: #2d3436;
        --light: #f5f6fa;
        --success: #00b894;
        --warning: #fdcb6e;
        --danger: #d63031;
        --gray: #636e72;
        --white: #ffffff;
        --locked: rgba(99, 110, 114, 0.2);
    }

    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    /* Dashboard Container */
    .dashboard-container {
        min-height: 100vh;
        background-color: var(--light);
        position: relative;
        overflow: hidden;
    }

    .bg-elements {
        position: absolute;
        width: 100%;
        height: 100%;
        z-index: 0;
    }

    .circle {
        position: absolute;
        border-radius: 50%;
        background: rgba(108, 92, 231, 0.05);
    }

    .circle-1 {
        width: 600px;
        height: 600px;
        top: -300px;
        right: -300px;
    }

    .circle-2 {
        width: 400px;
        height: 400px;
        bottom: -200px;
        left: -200px;
        background: rgba(0, 206, 201, 0.05);
    }

    .circle-3 {
        width: 200px;
        height: 200px;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        background: rgba(253, 203, 110, 0.05);
    }

    .dashboard-content {
        position: relative;
        z-index: 1;
        padding: 2rem;
        max-width: 1400px;
        margin: 0 auto;
    }

    /* Header Styles */
    .dashboard-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 3rem;
        flex-wrap: wrap;
        gap: 2rem;
    }

    .welcome-message h2 {
        color: var(--gray);
        font-weight: 400;
        font-size: 1.2rem;
        margin-bottom: 0.5rem;
    }

    .welcome-message h1 {
        color: var(--dark);
        font-weight: 700;
        font-size: 2.5rem;
        margin-bottom: 0.5rem;
    }

        .welcome-message h1 span {
            color: var(--primary);
            position: relative;
        }

            .welcome-message h1 span::after {
                content: '';
                position: absolute;
                bottom: 5px;
                left: 0;
                width: 100%;
                height: 8px;
                background-color: rgba(108, 92, 231, 0.2);
                z-index: -1;
            }

    .welcome-message .subtitle {
        color: var(--gray);
        font-size: 1rem;
        max-width: 500px;
    }

    .quick-stats {
        display: flex;
        gap: 1rem;
    }

    .stat-card {
        background: var(--white);
        padding: 1rem 1.5rem;
        border-radius: 12px;
        display: flex;
        align-items: center;
        gap: 1rem;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
        transition: transform 0.3s ease;
    }

        .stat-card:hover {
            transform: translateY(-5px);
        }

        .stat-card i {
            font-size: 1.5rem;
            color: var(--primary);
            background: rgba(108, 92, 231, 0.1);
            width: 50px;
            height: 50px;
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 50%;
        }

    .stat-value {
        font-size: 1.5rem;
        font-weight: 700;
        color: var(--dark);
        display: block;
        line-height: 1;
    }

    .stat-label {
        font-size: 0.8rem;
        color: var(--gray);
    }

    /* Dashboard Grid */
    .dashboard-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
        gap: 1.5rem;
    }

    /* Card Styles */
    .dashboard-card {
        background: var(--white);
        border-radius: 16px;
        padding: 1.5rem;
        cursor: pointer;
        transition: all 0.3s ease;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
        position: relative;
        overflow: hidden;
        border: 1px solid rgba(0, 0, 0, 0.03);
        display: flex;
        flex-direction: column;
        min-height: 180px;
    }

        .dashboard-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 4px;
            height: 100%;
            background: var(--primary);
            transition: width 0.3s ease;
        }

        .dashboard-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 25px rgba(108, 92, 231, 0.15);
        }

            .dashboard-card:hover::before {
                width: 8px;
            }

    .card-icon {
        margin-bottom: 1rem;
    }

        .card-icon i {
            font-size: 1.8rem;
            color: var(--primary);
            transition: all 0.3s ease;
        }

    .card-content h3 {
        color: var(--dark);
        font-size: 1.1rem;
        margin-bottom: 0.5rem;
        font-weight: 600;
    }

    .card-content p {
        color: var(--gray);
        font-size: 0.85rem;
        line-height: 1.4;
    }

    .card-hover {
        position: absolute;
        bottom: 1.5rem;
        right: 1.5rem;
        width: 30px;
        height: 30px;
        background: var(--primary-light);
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        opacity: 0;
        transform: translateX(10px);
        transition: all 0.3s ease;
    }

        .card-hover i {
            color: var(--white);
            font-size: 0.8rem;
        }

    .dashboard-card:hover .card-hover {
        opacity: 1;
        transform: translateX(0);
    }

    .dashboard-card:hover .card-icon i {
        transform: scale(1.1);
        color: var(--primary-light);
    }

    /* Locked Card Styles */
    .locked-card {
        position: relative;
        cursor: not-allowed;
        opacity: 0.7;
        background-color: var(--light);
    }

        .locked-card::before {
            background: var(--gray) !important;
        }

        .locked-card:hover {
            transform: none !important;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05) !important;
        }

        .locked-card .card-icon i {
            color: var(--gray) !important;
        }

        .locked-card .card-content h3,
        .locked-card .card-content p {
            color: var(--gray) !important;
        }

    .card-lock {
        position: absolute;
        top: 1rem;
        right: 1rem;
        color: var(--gray);
        font-size: 1.2rem;
        z-index: 2;
    }

    /* SweetAlert Customizations */
    .custom-swal-popup {
        border-radius: 16px !important;
        box-shadow: 0 10px 30px rgba(108, 92, 231, 0.3) !important;
    }

    .custom-swal-title {
        color: var(--primary) !important;
        font-weight: 700 !important;
    }

    .custom-swal-confirm-button {
        border-radius: 8px !important;
        padding: 10px 24px !important;
        font-weight: 600 !important;
    }

    /* Responsive Styles */
    @@media (max-width: 1200px) {
        .dashboard-grid {
            grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));
        }
    }

    @@media (max-width: 992px) {
        .dashboard-header {
            flex-direction: column;
            align-items: flex-start;
        }

        .quick-stats {
            width: 100%;
            justify-content: space-between;
        }
    }

    @@media (max-width: 768px) {
        .dashboard-content {
            padding: 1.5rem;
        }

        .dashboard-grid {
            grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
        }

        .welcome-message h1 {
            font-size: 2rem;
        }
    }

    @@media (max-width: 576px) {
        .dashboard-grid {
            grid-template-columns: 1fr;
        }

        .quick-stats {
            flex-direction: column;
        }

        .stat-card {
            width: 100%;
        }
    }
</style>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    // This would be in your _Host.cshtml or index.html
    window.showRegistrationAlert = function() {
        return Swal.fire({
            title: 'Complete Registration First',
            html: `<div style='text-align:center;'><i class='fas fa-store-alt' style='font-size:48px;color:#6c5ce7;margin-bottom:20px;'></i><p>Please complete your business registration to unlock all features</p></div>`,
            icon: 'info',
            showCancelButton: false,
            confirmButtonText: 'Go to Registration',
            confirmButtonColor: '#6c5ce7',
            background: '#ffffff',
            backdrop: 'rgba(108,92,231,0.4)',
            customClass: {
                popup: 'custom-swal-popup',
                title: 'custom-swal-title',
                confirmButton: 'custom-swal-confirm-button'
            }
        });
    };
</script>