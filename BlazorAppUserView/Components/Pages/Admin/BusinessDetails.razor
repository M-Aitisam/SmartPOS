@page "/businessdetails"
@inject IAdminService AdminService
@inject IAdminService AdminService
@inject IJSRuntime JS
@rendermode InteractiveServer

<!-- Bootstrap Navbar with Logo -->
<nav class="navbar navbar-expand-lg navbar-dark bg-primary mb-4">
    <div class="container-fluid">
        <a class="navbar-brand" href="#">
            <img src="https://getbootstrap.com/docs/5.3/assets/brand/bootstrap-logo-shadow.png" alt="Logo" width="30" height="24" class="d-inline-block align-text-top">
            Business Manager
        </a>
    </div>
</nav>

<div class="container">
    <h3 class="mb-4 text-primary">Business Management</h3>

    @if (isLoading)
    {
        <div class="alert alert-info">Loading...</div>
    }
    else if (businesses == null || businesses.Count == 0)
    {
        <div class="alert alert-warning">No businesses found.</div>
    }
    else
    {
        <table class="table table-bordered table-hover table-striped">
            <thead class="table-dark">
                <tr>
                    <th>ID</th>
                    <th>Name</th>
                    <th>Type</th>
                    <th>City</th>
                    <th>Area</th>
                    <th>Location</th>
                    <th>Active</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var business in businesses)
                {
                    <tr>
                        <td>@business.BusinessID</td>
                        <td>@business.BusinessName</td>
                        <td>@business.BusinessType</td>
                        <td>@business.City</td>
                        <td>@business.Area</td>
                        <td>@business.Location</td>
                        <td><span class="badge bg-@(business.IsActive ? "success" : "secondary")">@(business.IsActive ? "Yes" : "No")</span></td>
                        <td>
                            <button @onclick="() => EditBusiness(business)" class="btn btn-sm btn-primary me-1">Edit</button>
                            <button @onclick="() => ConfirmDelete(business.BusinessID)" class="btn btn-sm btn-danger">Delete</button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }

    <div class="card mt-5 shadow">
        <div class="card-header bg-primary text-white">
            <h4 class="mb-0">Add / Edit Business</h4>
        </div>
        <div class="card-body">
            <EditForm Model="@newBusiness" OnValidSubmit="SaveBusiness">
                <DataAnnotationsValidator />
                <ValidationSummary />

                <div class="mb-3">
                    <label class="form-label">Name:</label>
                    <InputText @bind-Value="newBusiness.BusinessName" class="form-control" required />
                </div>
                <div class="mb-3">
                    <label class="form-label">Type:</label>
                    <InputText @bind-Value="newBusiness.BusinessType" class="form-control" required />
                </div>
                <div class="mb-3">
                    <label class="form-label">City:</label>
                    <InputText @bind-Value="newBusiness.City" class="form-control" required />
                </div>
                <div class="mb-3">
                    <label class="form-label">Area:</label>
                    <InputText @bind-Value="newBusiness.Area" class="form-control" required />
                </div>
                <div class="mb-3">
                    <label class="form-label">Location:</label>
                    <InputText @bind-Value="newBusiness.Location" class="form-control" required />
                </div>
                <div class="form-check mb-3">
                    <InputCheckbox @bind-Value="newBusiness.IsActive" class="form-check-input" />
                    <label class="form-check-label">Active</label>
                </div>
                <button type="submit" class="btn btn-success">Save</button>
            </EditForm>
        </div>
    </div>
</div>

@code {
    private List<BusinessModel> businesses = new();
    private BusinessModel newBusiness = new();
    private bool isLoading = true;
    private int businessIdToDelete;
    private bool _jsInteropRequested;
    private string _jsMessage = "";

    protected override async Task OnInitializedAsync()
    {
        AdminService.OnChange += async () => await LoadBusinesses();
        await LoadBusinesses();
    }

    private async Task LoadBusinesses()
    {
        isLoading = true;
        businesses = await AdminService.GetAllBusinesses();
        isLoading = false;
        StateHasChanged();
    }

    private async Task SaveBusiness()
    {
        bool success = newBusiness.BusinessID == 0
            ? await AdminService.AddBusiness(newBusiness)
            : await AdminService.UpdateBusiness(newBusiness);

        if (success)
        {
            _jsMessage = "Business saved successfully.";
            _jsInteropRequested = true;

            if (newBusiness.BusinessID == 0)
            {
                newBusiness.BusinessID = businesses.Count + 1;
                businesses.Insert(0, newBusiness);
            }
            else
            {
                await LoadBusinesses();
            }

            newBusiness = new BusinessModel();
            StateHasChanged();
        }
        else
        {
            _jsMessage = "Failed to save business.";
            _jsInteropRequested = true;
        }
    }

    private void EditBusiness(BusinessModel business)
    {
        newBusiness = new BusinessModel
            {
                BusinessID = business.BusinessID,
                BusinessName = business.BusinessName,
                BusinessType = business.BusinessType,
                City = business.City,
                Area = business.Area,
                Location = business.Location,
                IsActive = business.IsActive
            };
    }

    private async Task ConfirmDelete(int id)
    {
        businessIdToDelete = id;
        bool confirm = await JS.InvokeAsync<bool>("confirm", "Are you sure you want to delete this business?");
        if (confirm)
        {
            await DeleteBusiness();
        }
    }

    private async Task DeleteBusiness()
    {
        if (await AdminService.DeleteBusiness(businessIdToDelete))
        {
            await LoadBusinesses();
        }
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (_jsInteropRequested)
        {
            _jsInteropRequested = false;
            await JS.InvokeVoidAsync("alert", _jsMessage);
        }
    }
}
