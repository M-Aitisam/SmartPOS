@inherits LayoutComponentBase
@implements IDisposable
@inject IAdminService AdminService
@inject IJSRuntime JS
@inject NavigationManager Navigation
@inject StateContainerService StateContainer

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet"
          integrity="sha384-KK94CHFLLe+nY2dmCWGMq91rCGa5gtU4mk92HdvYe+M/SXH301p5ILy+dN9+nJOZ" crossorigin="anonymous">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
    <title>POS System</title>
    <style>
    :root {
    --sidebar-width: 264px;
    --sidebar-collapsed-width: 0px;
    --transition-speed: 0.35s;
    --primary-color: #6c5ce7;
    --primary-dark: #5649c0;
    --primary-light: #a29bfe;
    --text-light: #f8f9fa;
    --text-dark: #212529;
    --sidebar-bg: #2c3e50;
    --sidebar-hover: rgba(255, 255, 255, 0.1);
    }

    .wrapper,
    #sidebar,
    .main,
    .navbar,
    aside {
    box-shadow: none !important;
    filter: none !important;
    }

    *,
    ::after,
    ::before {
    box-sizing: border-box;
    }

    h3 {
    font-size: 1.2375rem;
    color: var(--text-dark);
    }

    a {
    cursor: pointer;
    text-decoration: none;
    font-family: 'Poppins', sans-serif;
    }

    li {
    list-style: none;
    }

    body {
    overflow-x: hidden;
    background-color: #f8f9fa;
    }

    /* Layout skeleton */
    .wrapper {
    align-items: stretch;
    display: flex;
    width: 100%;
    min-height: 100vh;
    box-shadow: none !important;
    }

    #sidebar {
    width: var(--sidebar-width);
    min-width: var(--sidebar-width);
    max-width: var(--sidebar-width);
    transition: all var(--transition-speed) ease-in-out;
    z-index: 1111;
    box-shadow: none !important;
    background: var(--sidebar-bg);
    border-right: 1px solid #1a252f;
    transform: translateX(calc(-1 * var(--sidebar-width)));
    position: fixed;
    height: 100vh;
    }

    #sidebar.expanded {
    transform: translateX(0);
    }

    .main {
    display: flex;
    flex-direction: column;
    min-height: 100vh;
    width: 100%;
    transition: margin-left var(--transition-speed) ease-in-out;
    margin-left: var(--sidebar-collapsed-width);
    }

    .main.expanded {
    margin-left: var(--sidebar-width);
    }

    /* Enhanced Navbar styles */
    .navbar {
    background-color: white;
    padding: 0.5rem 1.5rem;
    border-bottom: 1px solid #e9ecef;
    position: sticky;
    top: 0;
    z-index: 1000;
    box-shadow: 0 2px 10px rgba(108, 92, 231, 0.1);
    }

    .navbar-brand {
    display: flex;
    align-items: center;
    }

    .business-logo {
    width: 32px;
    height: 32px;
    border-radius: 6px;
    margin-right: 12px;
    object-fit: contain;
    background-color: var(--primary-color);
    padding: 5px;
    }

    .business-name {
    font-weight: 600;
    font-size: 1.1rem;
    color: var(--primary-dark);
    }

    .navbar-nav .nav-link {
    color: var(--text-dark);
    font-weight: 500;
    padding: 0.5rem 1rem;
    margin: 0 0.25rem;
    border-radius: 0.5rem;
    transition: all 0.2s;
    }

    .navbar-nav .nav-link:hover,
    .navbar-nav .nav-link.active {
    color: white;
    background-color: var(--primary-color);
    }

    .user-dropdown {
    display: flex;
    align-items: center;
    cursor: pointer;
    padding: 0.25rem 0.75rem;
    border-radius: 2rem;
    transition: all 0.2s;
    }

    .user-dropdown:hover {
    background-color: rgba(108, 92, 231, 0.1);
    }

    .user-avatar {
    width: 36px;
    height: 36px;
    border-radius: 50%;
    background-color: var(--primary-light);
    display: flex;
    align-items: center;
    justify-content: center;
    margin-right: 10px;
    color: white;
    font-weight: bold;
    font-size: 0.9rem;
    }

    .user-info {
    display: flex;
    flex-direction: column;
    }

    .user-name {
    font-weight: 600;
    color: var(--text-dark);
    font-size: 0.9rem;
    margin-bottom: 0;
    }

    .user-role {
    font-size: 0.7rem;
    color: #6c757d;
    }

    .dropdown-menu {
    border: none;
    box-shadow: 0 0.5rem 1rem rgba(108, 92, 231, 0.15);
    border-radius: 0.5rem;
    padding: 0.5rem 0;
    min-width: 220px;
    border: 1px solid rgba(108, 92, 231, 0.1);
    }

    .dropdown-item {
    padding: 0.5rem 1.5rem;
    color: var(--text-dark);
    transition: all 0.2s;
    font-size: 0.9rem;
    }

    .dropdown-item:hover {
    background-color: var(--primary-light);
    color: white;
    }

    .dropdown-item i {
    width: 20px;
    text-align: center;
    margin-right: 8px;
    color: var(--primary-color);
    }

    .dropdown-divider {
    margin: 0.5rem 0;
    border-color: rgba(108, 92, 231, 0.1);
    }

    .dropdown-header {
    font-size: 0.75rem;
    font-weight: 600;
    color: var(--primary-dark);
    padding: 0.25rem 1.5rem;
    text-transform: uppercase;
    }

    /* Enhanced Sidebar styles */
    .sidebar-logo {
    padding: 1.15rem 1.5rem;
    background-color: var(--primary-color);
    border-bottom: 1px solid rgba(255, 255, 255, 0.1);
    }

    .sidebar-logo a {
    color: white;
    font-size: 1.25rem;
    font-weight: 600;
    display: flex;
    align-items: center;
    }

    .sidebar-logo i {
    margin-right: 10px;
    font-size: 1.5rem;
    }

    .sidebar-nav {
    padding: 0;
    }

    .sidebar-header {
    color: var(--primary-light);
    font-size: .75rem;
    padding: 1.5rem 1.5rem .375rem;
    text-transform: uppercase;
    letter-spacing: 1px;
    font-weight: 600;
    }

    a.sidebar-link {
    padding: .75rem 1.5rem;
    color: var(--text-light);
    position: relative;
    display: flex;
    align-items: center;
    font-size: 0.95rem;
    transition: all 0.2s;
    border-left: 3px solid transparent;
    }

    a.sidebar-link:hover {
    background-color: var(--sidebar-hover);
    color: white;
    border-left: 3px solid var(--primary-light);
    }

    a.sidebar-link.active {
    background-color: rgba(108, 92, 231, 0.2);
    color: white;
    border-left: 3px solid var(--primary-color);
    font-weight: 500;
    }

    .sidebar-link i {
    margin-right: 12px;
    font-size: 1.1rem;
    width: 24px;
    text-align: center;
    color: var(--primary-light);
    }

    .sidebar-link.active i {
    color: var(--primary-color);
    }

    .sidebar-link[data-bs-toggle="collapse"]::after {
    border: solid;
    border-width: 0 .075rem .075rem 0;
    content: "";
    display: inline-block;
    padding: 2px;
    position: absolute;
    right: 1.5rem;
    top: 1.4rem;
    transform: rotate(-135deg);
    transition: all .2s ease-out;
    color: var(--text-light);
    }

    .sidebar-link[data-bs-toggle="collapse"].collapsed::after {
    transform: rotate(45deg);
    transition: all .2s ease-out;
    }

    .sidebar-dropdown .sidebar-link {
    padding-left: 3.5rem;
    font-size: 0.9rem;
    }

    .content {
    flex: 1;
    width: 100%;
    background-color: #f8f9fa;
    transition: all var(--transition-speed) ease-in-out;
    padding: 1.5rem;
    }

    .sidebar-toggle {
    transition: transform var(--transition-speed) ease-in-out;
    color: var(--primary-color);
    background: rgba(108, 92, 231, 0.1);
    border: none;
    border-radius: 50%;
    width: 36px;
    height: 36px;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    margin-right: 1rem;
    }

    .sidebar-toggle:hover {
    background: rgba(108, 92, 231, 0.2);
    }

    .sidebar-toggle.expanded {
    transform: rotate(90deg);
    }

    /* Responsive adjustments */
    @@media (max-width: 768px) {
    #sidebar {
    position: fixed;
    z-index: 2000;
    }

    .main.expanded {
    position: relative;
    margin-left: 0;
    }

    .content {
    padding: 1rem;
    }
    }

    /* Overlay for mobile */
    .sidebar-overlay {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(0, 0, 0, 0.5);
    z-index: 1999;
    display: none;
    }

    .sidebar-overlay.show {
    display: block;
    }

    /* Special page styles */
    body.hide-navbar-sidebar #sidebar,
    body.hide-navbar-sidebar .navbar {
    display: none !important;
    }

    body.hide-navbar-sidebar .main {
    margin-left: 0 !important;
    width: 100% !important;
    }

    body.hide-navbar-sidebar .content {
    padding: 0 !important;
    background-color: transparent !important;
    }

    /* Additional purple theme elements */
    .badge-primary {
    background-color: var(--primary-color);
    color: white;
    }

    .progress-bar {
    background-color: var(--primary-color);
    }

    .btn-primary {
    background-color: var(--primary-color);
    border-color: var(--primary-color);
    }

    .btn-primary:hover {
    background-color: var(--primary-dark);
    border-color: var(--primary-dark);
    }

    .text-primary {
    color: var(--primary-color) !important;
    }

    .bg-primary {
    background-color: var(--primary-color) !important;
    }
    </style>
</head>

<body class="@(ShouldHideNavbarAndSidebar() ? "hide-navbar-sidebar" : "")">
    <div class="wrapper">
        <!-- Sidebar Overlay (for mobile) -->
        <div class="sidebar-overlay" id="sidebarOverlay"></div>

        <!-- Sidebar -->
        <aside id="sidebar">
            <div class="h-100">
               
                <!-- Sidebar Navigation -->
                <ul class="sidebar-nav">
                    <li class="sidebar-header">
                        Main Menu
                    </li>

                    <!-- Dashboard Section -->
                    <li class="sidebar-item">
                        <a href="/dashboard" class="sidebar-link">
                            <i class="fa-solid fa-store pe-2"></i>
                            Dashboard
                        </a>
                    </li>

                    <!-- Authentication Section -->
                    <li class="sidebar-item">
                        <a href="#" class="sidebar-link collapsed" data-bs-toggle="collapse" data-bs-target="#auth"
                           aria-expanded="false" aria-controls="auth">
                            <i class="fa-solid fa-user-shield pe-2"></i>
                            Authentication
                        </a>
                        <ul id="auth" class="sidebar-dropdown list-unstyled collapse" data-bs-parent="#sidebar">
                            <li class="sidebar-item">
                                <a href="/login" class="sidebar-link">Login</a>
                            </li>
                            <li class="sidebar-item">
                                <a href="/businessdetails" class="sidebar-link">Register</a>
                            </li>
                        </ul>
                    </li>

                    <!-- Products Management -->
                    <li class="sidebar-item">
                        <a href="#" class="sidebar-link collapsed" data-bs-toggle="collapse" data-bs-target="#products"
                           aria-expanded="false" aria-controls="products">
                            <i class="fa-solid fa-boxes pe-2"></i>
                            Products
                        </a>
                        <ul id="products" class="sidebar-dropdown list-unstyled collapse" data-bs-parent="#sidebar">
                            <li class="sidebar-item">
                                <a href="/categories" class="sidebar-link">Categories</a>
                            </li>
                            <li class="sidebar-item">
                                <a href="/product" class="sidebar-link">Products List</a>
                            </li>
                            <li class="sidebar-item">
                                <a href="/menu" class="sidebar-link">Menu Management</a>
                            </li>
                        </ul>
                    </li>

                    <!-- Sales Section -->
                    <li class="sidebar-item">
                        <a href="#" class="sidebar-link collapsed" data-bs-toggle="collapse" data-bs-target="#sales"
                           aria-expanded="false" aria-controls="sales">
                            <i class="fa-solid fa-cash-register pe-2"></i>
                            Sales
                        </a>
                        <ul id="sales" class="sidebar-dropdown list-unstyled collapse" data-bs-parent="#sidebar">
                            <li class="sidebar-item">
                                <a href="/adminpage" class="sidebar-link">POS System</a>
                            </li>
                            <li class="sidebar-item">
                                <a href="/order-history" class="sidebar-link">Order History</a>
                            </li>
                        </ul>
                    </li>

                    <!-- Reports Section -->
                    <li class="sidebar-item">
                        <a href="#" class="sidebar-link collapsed" data-bs-toggle="collapse" data-bs-target="#reports"
                           aria-expanded="false" aria-controls="reports">
                            <i class="fa-solid fa-chart-bar pe-2"></i>
                            Reports
                        </a>
                        <ul id="reports" class="sidebar-dropdown list-unstyled collapse" data-bs-parent="#sidebar">
                            <li class="sidebar-item">
                                <a href="/salesreport" class="sidebar-link">Sales Report</a>
                            </li>
                        </ul>
                    </li>

                    <!-- Administration Section -->
                    <li class="sidebar-item">
                        <a href="/adminpage" class="sidebar-link">
                            <i class="fa-solid fa-user-cog pe-2"></i>
                            Administration
                        </a>
                    </li>

                    <!-- Settings Section -->
                    <li class="sidebar-item">
                        <a href="/" class="sidebar-link">
                            <i class="fa-solid fa-cog pe-2"></i>
                            Settings
                        </a>
                    </li>
                </ul>
            </div>
        </aside>
        <!-- Main Component -->
        <div class="main" id="mainContent">
            <nav class="navbar navbar-expand px-3 border-bottom">
                <!-- Button for sidebar toggle -->
                <button class="btn border-0 shadow-none sidebar-toggle" type="button" data-bs-theme="dark"
                        style="outline: none !important; --bs-btn-focus-box-shadow: none;" @onclick="ToggleSidebar">
                    <i class="fas fa-bars fs-4"></i>
                </button>

                <!-- Business Info -->
                <div class="navbar-brand ms-3">
                    @if (businessLogoUrl != null)
                    {
                        <img src="@businessLogoUrl" alt="Business Logo" class="business-logo" />
                    }
                    <span class="business-name">@businessName</span>
                </div>

                <!-- Spacer to push user dropdown to the right -->
                <div class="ms-auto"></div>

                <!-- User dropdown -->
                <div class="dropdown">
                    <div class="user-dropdown" data-bs-toggle="dropdown" aria-expanded="false">
                        <div class="user-avatar">@userInitials</div>
                        <div class="user-info">
                            <span class="user-name">@userName</span>
                            <span class="user-role">@userRole</span>
                        </div>
                        <i class="fas fa-chevron-down ms-2"></i>
                    </div>
                    <ul class="dropdown-menu dropdown-menu-end">
                        <li><h6 class="dropdown-header">Account</h6></li>
                        
                        <li><a class="dropdown-item" href="/"><i class="fas fa-cog"></i> Settings</a></li>
                        <li><a class="dropdown-item" href="/billing"><i class="fas fa-credit-card"></i> Billing Plan</a></li>
                        <li><hr class="dropdown-divider"></li>
                        <li><a class="dropdown-item" href="/pricing"><i class="fas fa-tag"></i> Pricing</a></li>
                       
                        <li><hr class="dropdown-divider"></li>
                        <li><a class="dropdown-item" href="/"><i class="fas fa-sign-out-alt"></i> Logout</a></li>
                    </ul>
                </div>
            </nav>
            <main>
                <div class="content">
                    @Body
                </div>
            </main>
        </div>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Function to handle sidebar toggle
        function toggleSidebar() {
            const sidebar = document.getElementById('sidebar');
            const mainContent = document.getElementById('mainContent');
            const sidebarToggle = document.querySelector('.sidebar-toggle');
            const sidebarOverlay = document.getElementById('sidebarOverlay');

            // Don't toggle if we're on a special page
            if (document.body.classList.contains('hide-navbar-sidebar')) {
                return;
            }

            sidebar.classList.toggle('expanded');
            mainContent.classList.toggle('expanded');
            sidebarToggle.classList.toggle('expanded');

            // Show/hide overlay on mobile
            if (window.innerWidth <= 768) {
                if (sidebar.classList.contains('expanded')) {
                    sidebarOverlay.classList.add('show');
                } else {
                    sidebarOverlay.classList.remove('show');
                }
            }
        }

        // Close sidebar when clicking on overlay (mobile)
        document.getElementById('sidebarOverlay').addEventListener('click', function() {
            toggleSidebar();
        });

        // Close sidebar when clicking on a link (mobile)
        document.querySelectorAll('.sidebar-link').forEach(link => {
            link.addEventListener('click', function() {
                if (window.innerWidth <= 768) {
                    toggleSidebar();
                }
            });
        });

        // Handle window resize
        function handleResize() {
            const sidebar = document.getElementById('sidebar');
            const mainContent = document.getElementById('mainContent');
            const sidebarOverlay = document.getElementById('sidebarOverlay');

            if (window.innerWidth > 768) {
                // On desktop, ensure sidebar is visible if expanded
                if (mainContent.classList.contains('expanded')) {
                    sidebar.classList.add('expanded');
                }
                sidebarOverlay.classList.remove('show');
            } else {
                // On mobile, hide sidebar by default
                if (!mainContent.classList.contains('expanded')) {
                    sidebar.classList.remove('expanded');
                }
            }
        }

        // Initial setup
        document.addEventListener('DOMContentLoaded', function() {
            // Start with sidebar closed
            const sidebar = document.getElementById('sidebar');
            const mainContent = document.getElementById('mainContent');

            if (window.innerWidth > 768) {
                // Desktop - start closed but with margin for sidebar
                sidebar.classList.remove('expanded');
                mainContent.classList.remove('expanded');
            } else {
                // Mobile - start completely closed
                sidebar.classList.remove('expanded');
                mainContent.classList.remove('expanded');
            }

            // Add event listeners
            document.querySelector('.sidebar-toggle').addEventListener('click', toggleSidebar);
            window.addEventListener('resize', handleResize);
        });
    </script>
</body>

</html>

@code {
    private string? businessLogoUrl;
    private string businessName = " ";
    private string userName = " ";
    private string userRole = "Admin";
    private string userInitials = "AA";
    private bool isSidebarExpanded = false;
    private bool _isFirstRender = true;

    

    protected override async Task OnInitializedAsync()
    {
        // Load business details from state container (no JS interop here)
        await LoadBusinessDetails();

        // Subscribe to state changes
        StateContainer.OnChange += HandleStateChange;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            _isFirstRender = false;

            // Now it's safe to make JS interop calls
            var token = await JS.InvokeAsync<string>("localStorage.getItem", "authToken");
            if (!string.IsNullOrEmpty(token))
            {
                var email = await JS.InvokeAsync<string>("localStorage.getItem", "userEmail");
                if (!string.IsNullOrEmpty(email))
                {
                    var business = await AdminService.GetBusinessByEmail(email);
                    if (business != null)
                    {
                        StateContainer.CurrentBusiness = business;
                        StateContainer.IsRegistered = true;
                        StateContainer.IsAuthenticated = true;
                        await LoadBusinessDetails();
                    }
                }
            }

            StateHasChanged();
        }
    }



    public void Dispose()
    {
        StateContainer.OnChange -= HandleStateChange;
    }
    private async void HandleStateChange()
    {
        try
        {
            await InvokeAsync(async () =>
            {
                await LoadBusinessDetails();
                StateHasChanged();
            });
        }
        catch (Exception ex)
        {
            // Log the exception as it won't be caught otherwise in async void
            Console.WriteLine($"Error in HandleStateChange: {ex}");
        }
    }

      private async Task LoadBusinessDetails()
    {
        try
        {
            if (StateContainer.CurrentBusiness != null)
            {
                UpdateFromBusinessModel(StateContainer.CurrentBusiness);
            }
            else
            {
                // Fallback to service if state container doesn't have the business
                var business = await AdminService.GetCurrentBusiness();
                if (business != null)
                {
                    StateContainer.CurrentBusiness = business;
                    UpdateFromBusinessModel(business);
                }
            }
        }
        catch (Exception ex)
        {
            await JS.InvokeVoidAsync("console.error", "Error loading business details:", ex);
        }
    }

    private void UpdateFromBusinessModel(BusinessModel business)
    {
        // Handle null business case
        if (business == null)
        {
            businessName = "Pakistani Cafe";
            businessLogoUrl = null;
            userName = string.Empty;
            userInitials = string.Empty;
            StateHasChanged();
            return;
        }

        // Process BusinessDetails
        if (business.BusinessDetails != null)
        {
            businessName = business.BusinessDetails.BusinessName;

            businessLogoUrl = business.BusinessDetails.LogoData != null && business.BusinessDetails.LogoData.Length > 0
                ? $"data:image/png;base64,{Convert.ToBase64String(business.BusinessDetails.LogoData)}"
                : null;
        }
        else
        {
            businessName = "";
            businessLogoUrl = null;
        }

        // Process GeneralInformation
        if (business.GeneralInformation != null)
        {
            var firstName = business.GeneralInformation.FirstName ?? string.Empty;
            var lastName = business.GeneralInformation.LastName ?? string.Empty;
            userName = $"{firstName} {lastName}".Trim();
            userInitials = GetInitials(userName);
        }
        else
        {
            userName = string.Empty;
            userInitials = string.Empty;
        }

        // Force UI update
        StateHasChanged();
    }

    protected override async Task OnParametersSetAsync()
    {
        await LoadBusinessDetails();
    }
    private string GetInitials(string name)
    {
        if (string.IsNullOrWhiteSpace(name))
            return "US";

        var parts = name.Split(' ', StringSplitOptions.RemoveEmptyEntries);
        if (parts.Length == 0)
            return "US";

        if (parts.Length == 1)
            return parts[0][0].ToString().ToUpper();

        return $"{parts[0][0]}{parts[^1][0]}".ToUpper();
    }

    private void ToggleSidebar()
    {
        isSidebarExpanded = !isSidebarExpanded;
        JS.InvokeVoidAsync("toggleSidebar");
    }

    private bool ShouldHideNavbarAndSidebar()
    {
        var uri = Navigation.ToAbsoluteUri(Navigation.Uri);
        return uri.AbsolutePath.Contains("businessregistration", StringComparison.OrdinalIgnoreCase) ||
               uri.AbsolutePath.Equals("/login", StringComparison.OrdinalIgnoreCase) ||
               uri.AbsolutePath.Equals("/dashboard", StringComparison.OrdinalIgnoreCase) ||
               uri.AbsolutePath.Equals("/", StringComparison.OrdinalIgnoreCase);
    }
    

}

<script>
    // Global function to load JsBarcode library
    window.loadJsBarcode = function() {
        return new Promise((resolve, reject) => {
            if (typeof JsBarcode !== 'undefined') {
                resolve();
                return;
            }

            const script = document.createElement('script');
            script.src = 'https://cdn.jsdelivr.net/npm/jsbarcode@3.11.5/dist/JsBarcode.all.min.js';
            script.onload = resolve;
            script.onerror = reject;
            document.head.appendChild(script);
        });
    };

    // Function to generate barcode
    window.generateBarcode = function(elementId, text) {
        if (typeof JsBarcode === 'undefined') {
            console.error("JsBarcode not loaded");
            return;
        }

        try {
            JsBarcode(`#${elementId}`, text, {
                format: "CODE128",
                lineColor: "#000",
                width: 2,
                height: 50,
                displayValue: true
            });
        } catch (e) {
            console.error("Barcode generation error:", e);
        }
    };

    // Function to handle printing
    window.printReceipt = function() {
        const printContents = document.getElementById('receiptToPrint').innerHTML;
        const originalContents = document.body.innerHTML;

        document.body.innerHTML = printContents;
        window.print();
        document.body.innerHTML = originalContents;https://www.coursera.org/learn/google-ads-beginner/home/week/1
        window.location.reload();
    };
</script>